/*
BigInt는 아주 큰 정수(integer)를 표현하기 위해 등장한 데이터 타입

자바스크립트에서 안전한 최대 정수는 2**53 - 1,
                안전한 최소 정수는 -(2**53 - 1)

이 숫자 범위를 초과하는 정수값을 사용하면 연산에 미세한 오류가 생긴다.
*/

console.log(9007199254740991 + 1 === 9007199254740991 + 2); // true
console.log(9007199254740991 + 2); /// 9007199254740992
console.log(9007199254740993); /// 9007199254740992

/*
자바스크립트의 숫자형 값에는 9000조 정도의 정수 표현의 한계가 존재한다.

일반 정수 마지막에 알파벳 n을 붙이거나 BigInt라는 함수를 사용하면 된다
*/
console.log(9007199254740993n); // 9007199254740993n
console.log(BigInt('9007199254740993')); // 9007199254740993n

/*
단 소수 형태의 결과가 리턴되는 연산은 자동으로 소수점 아래가 버려진다
*/
10n / 6n; // 1n
5n / 2n; // 2n

/*
BigInt 타입 끼리만 연산할 수 있고 서로 다른 타입끼리의 연산은 명시적 변환을 해야함
*/
3n * 2; // TypeError
3n * 2n; // 6n
Number(3n) * 2; // 6